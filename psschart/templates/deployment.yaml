apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "psschart.fullname" . }}
  labels:
    {{- include "psschart.labels" . | nindent 4 }}
spec:
  {{- if not .Values.autoscaling.enabled }}
  replicas: {{ .Values.replicaCount }}
  {{- end }}
  selector:
    matchLabels:
      {{- include "psschart.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      {{- with .Values.podAnnotations }}
      annotations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      labels:
        {{- include "psschart.selectorLabels" . | nindent 8 }}
    spec:
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ include "psschart.serviceAccountName" . }}
      securityContext:
        {{- toYaml .Values.podSecurityContext | nindent 8 }}
      containers:
        - name: {{ .Chart.Name }}
          securityContext:
            {{- toYaml .Values.securityContext | nindent 12 }}
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag | default .Chart.AppVersion }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          env:
            - name: PSSCONFIG
              value: {{ .Values.config.path }}/config.json
          ports:
            - name: http
              containerPort: {{ .Values.api.port }}
          # livenessProbe:
          #   httpGet: 
          #     path: /healthz/live
          #     port: http
          #   initialDelaySeconds: 5
          #   periodSeconds: 10
          #   timeoutSeconds: 1
          readinessProbe:
            httpGet:
              path: /healthz/ready
              port: http
            initialDelaySeconds: 5
            periodSeconds: 10
            timeoutSeconds: 1
          resources:
            {{- toYaml .Values.resources | nindent 12 }}
          volumeMounts:
            - name: config-volume
              mountPath: {{ .Values.config.path }}
            - name: data-volume
              mountPath: {{ .Values.data.internal_path }}
      volumes:
        - name: config-volume
          configMap:
            name: {{ .Release.Name }}-configmap
        - name: data-volume
          hostPath:
            path: {{ .Values.data.external_path }}
            type: DirectoryOrCreate

      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
